`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 05/03/2022 02:55:49 PM
// Design Name: 
// Module Name: counter
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module counter(
    input clk,
    output Qc1,
    output Qc2,
    output Qc3
    );
  
    wire na, nb, nc; // input wire
        
     assign na = Qc2 & Qc3;
     assign nb = ~Qc2 + Qc3;
     assign nc = Qc1 + (Qc2&~Qc3);
     
    FFT Ta(
    .T(na),
    .clk(clk),
    .Q(Qc1)
    
    );
    
    FFT Tb(
    .T(nb),
    .clk(clk),
    .Q(Qc2)
    );
    
    FFT Tc(
    .T(nc),
    .clk(clk),
    .Q(Qc3)
    );
 
    
endmodule


//testbench

`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 05/03/2022 02:55:49 PM
// Design Name: 
// Module Name: counter_testbench
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module counter_testbench( );
reg clock;
wire a, b, c;
counter dut(
.clk(clock),
.Qc1(a),
.Qc2(b),
.Qc3(c)
);
initial begin
clock = 0;
forever #80 clock = ~clock;
end
endmodule

//2300 Quiz

module FFD(
    input D,
    input clk,
    output reg Q
    );
initial begin
Q = 0;
end
always@(posedge clk)
begin
Q = D;
end

endmodule

module FFDt(input clk, output [1:0] Qi);
wire[2:0] w;
assign w[1] = Qi[0];
assign w[0] = ~Qi[1];
 
FFD d1(.D(w[0]), .clk(clk), .Q(Qi[0]));
FFD d3(.D(w[1]), .clk(clk), .Q(Qi[1]));

endmodule
