`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 11/21/2022 11:04:42 AM
// Design Name: 
// Module Name: Parity
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////

module Parity(input Load, Clock, [7:0]B, output serial, serialo);
wire Q, pb, boool;
shift7 sr(B, Load, Clock, Q);
ParityF pG(~L, Clock, Q, pb);
mod7count bitprog(Load, Clock,boool);
assign serial = (boool)?pb:Q;

endmodule

module ParityF(input L, Clock, w, output reg pbit);//w is the first bit
reg [3:0] bcount = 4'b0;
initial begin
pbit = 0;
end
always@(posedge Clock)
begin
    if(~L)
    begin
        if(w == 1)
            pbit = ~pbit;
    end
end
endmodule

module mod7count(input en, Clock, output reg c);
reg [2:0] count;
initial begin
count = 3'b0;
c = 0;
end
  always @(posedge Clock)
  begin
     if (~en)//if !load, which is shift:
     begin
        if(count[0]&count[1]&count[2])c = ~c;          
        count <= count +1;
     end
  end
endmodule

module shift7 (R, L, Clock, Q);//right shift, Q = first bit of R>>1
  input [7:0] R; //Load/Shift when L = 1/0 
  input L, Clock;
  output reg [3:0] Q;
  
  reg [16:0] datar;
  always @(posedge Clock)
  begin
     if (L)
         datar <= {8'b0,R};
    else
         begin
            datar = R>>1;
        end
     Q = datar[0];
  end
endmodule 


module parityArc_test;
reg LL, CLK;
reg [7:0] b;
wire parity;
Parity uut(LL, CLK, b, parity);

initial begin
LL = 0; CLK = 0; b= 8'b0;
#1 b = 8'b0100_1111;
#1 LL = 1;
repeat(60)
#1 CLK=~CLK;

end
endmodule


